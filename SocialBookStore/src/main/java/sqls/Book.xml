<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mul.com.a.dao.BookDao">
	<insert id="postbook" parameterType="mul.com.a.dto.BookDto">
		insert into sbs_book(title, filename, writer, publisher, price, isbn, content,
								reg_date, publish_date, sort, genre, delivery_fee, amount)
		values( #{title}, #{filename}, #{writer}, #{publisher}, ${price}, ${isbn},
				#{content}, NOW(), #{publishDate}, #{sort}, #{genre}, ${deliveryFee},
				${amount})
	</insert>
	<insert id="postorder" parameterType="mul.com.a.dto.OrderDto">
		insert into sbs_order(id, book_seq, order_date, address, delivery_fee, book_count,
								price, card_num)
		values( #{id}, ${bookSeq}, NOW(), #{address}, ${deliveryFee}, ${bookCount},
				${price}, #{cardNum})
	
	</insert>
	<insert id="postwish" parameterType="mul.com.a.dto.WishDto">
		insert into sbs_wishlist(id, book_seq, delivery_fee, book_count, price)
		values(#{id}, #{bookSeq}, #{deliveryFee}, #{bookCount}, #{price})
	</insert>
	
	<select id="booklist" resultType="mul.com.a.dto.BookDto">
		<!-- select 	title, filename, writer, genre, isbn,  DATE_FORMAT(reg_date, '%Y%m%d%H%i%s'), 
		DATE_FORMAT(publish_date, '%Y%m%d'), sort
		from sbs_book
		 -->
		select *
		from sbs_book
	</select>
	<select id="booklistgenre">
		select TB.*
		from ( select rank() over(order by reg_date desc)  as RNUM,
				COUNT(*) OVER() AS TOTCNT,
				SEQ,
				TITLE,
				FILENAME,
				WRITER,
				PUBLISHER,
				PRICE,
				ISBN,
				REG_DATE,
				PUBLISH_DATE,
				DELIVERY_FEE,
				GENRE,
				AMOUNT
				FROM SBS_BOOK) AS TB
				<if test="choice=='title'">
				WHERE TITLE LIKE CONCAT('%', #{search}, '%') AND GENRE=#{genre}
				</if>
				<if test="choice=='writer'">
				WHERE WRITER LIKE CONCAT('%', #{search}, '%') AND GENRE=#{genre}
				</if>
				<if test="choice=='content'">
				WHERE CONTENT LIKE CONCAT('%', #{search}, '%') AND GENRE=#{genre}
				</if>
				AND RNUM >= (#{currentpage}*#{rowsperpage})-#{rowsperpage}+1
		 		<![CDATA[  
		  		AND RNUM <= #{currentpage}*#{rowsperpage}
		  		]]>
	</select>
	<select id="booklistsort" resultType="mul.com.a.dto.BookDto">
		select TB.*
		from ( select rank() over(order by reg_date desc)  as RNUM,
				COUNT(*) OVER() AS TOTCNT,
				SEQ,
				TITLE,
				FILENAME,
				WRITER,
				PUBLISHER,
				PRICE,
				ISBN,
				REG_DATE,
				PUBLISH_DATE,
				DELIVERY_FEE,
				SORT,
				AMOUNT
				FROM SBS_BOOK) AS TB
				<if test="choice=='title'">
				WHERE TITLE LIKE CONCAT('%', #{search}, '%') AND SORT=#{sort}
				</if>
				<if test="choice=='writer'">
				WHERE WRITER LIKE CONCAT('%', #{search}, '%') AND SORT=#{sort}
				</if>
				<if test="choice=='content'">
				WHERE CONTENT LIKE CONCAT('%', #{search}, '%') AND SORT=#{sort}
				</if>
				AND RNUM >= (#{currentpage}*#{rowsperpage})-#{rowsperpage}+1
		 		<![CDATA[  
		  		AND RNUM <= #{currentpage}*#{rowsperpage}
		  		]]>
		 
	</select>
	
	<select id="orderlist" resultType="mul.com.a.dto.OrderDto">
		select id, book_seq, order_date, address, delivery_fee, book_count, price
		from sbs_order
	</select>
	
	<select id="wishlist" parameterType="java.lang.String" resultType="mul.com.a.dto.WishDto">
		select a.id, a.book_seq, a.delivery_fee, a.book_count, a.price, b.title, b.writer, b.filename
		from sbs_wishlist as a, sbs_book as b 
		where id=#{id} and a.book_seq = b.seq;
	</select>
	
	<select id="bookcheck" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*)
		from sbs_book
		where title=#{title}
	</select>
	
	<select id="getbook" parameterType="java.lang.String" resultType="mul.com.a.dto.BookDto">
		select seq, title, filename, writer, publisher, price, isbn, sort, genre, delivery_fee, 
		amount, publish_date
		from sbs_book
		where seq=${seq}
	</select>

</mapper>